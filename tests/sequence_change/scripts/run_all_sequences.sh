#!/bin/bash

# Caminhos e execut√°vel
BASE_DIR="../../../"

BIN_DIR="$BASE_DIR/bin"
EXE="ssp_npm_solver.out"

INSTANCE="ins160_m=3_j=20_t=20_var=20.txt"
INSTANCE_PATH="$BASE_DIR/data/instancias_txt/SSP-NPM-I/$INSTANCE"

# Verifica√ß√µes iniciais
if [[ ! -x "$BIN_DIR/$EXE" ]]; then
  echo "‚ùå Erro: Execut√°vel '$BIN_DIR/$EXE' n√£o encontrado ou sem permiss√£o de execu√ß√£o."
  exit 1
fi

if [[ ! -f "$INSTANCE_PATH" ]]; then
  echo "‚ùå Erro: Inst√¢ncia '$INSTANCE_PATH' n√£o encontrada."
  exit 1
fi

# Fun√ß√£o para gerar permuta√ß√µes da sequ√™ncia
permute() {
  local items="$1"
  local out="$2"
  local i
  [[ -z "$items" ]] && {
    echo "‚ñ∂Ô∏è  Executando para sequ√™ncia: $out"
    run_script "$out"
    return
  }
  for ((i = 0; i < ${#items}; i++)); do
    permute "${items:0:i}${items:i+1}" "$out${items:i:1}"
  done
}

# Fun√ß√£o para rodar o programa com uma sequ√™ncia
run_script() {
  local sequence="$1"
  output_dir="../__output/$sequence"

  # Criar diret√≥rios de sa√≠da
  for method in TS MA FL; do
    mkdir -p "$output_dir/$method"
  done

  # Comandos com verifica√ß√£o de erro
  for objective in 1 2 3; do
    case $objective in
      1) method="TS" ;;
      2) method="MA" ;;
      3) method="FL" ;;
    esac

    CMD="$BIN_DIR/$EXE --instance $INSTANCE_PATH --output $output_dir/$method/$INSTANCE --objective $objective --iterations 1000 --runs 10 --sequence $sequence"

    echo "üöÄ Rodando: $CMD"
    if ! $CMD; then
      echo "‚ùå Erro na execu√ß√£o com sequ√™ncia '$sequence', objetivo $objective"
    fi
  done
}

Testa todas as permuta√ß√µes de "1234"
permute "1234" ""